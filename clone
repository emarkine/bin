#!/bin/bash                                                                                                                             
# Copyright 2011 EugeneLab   
# 
# clone 0.0.6
# 
# Клонирование всех файлов (кроме невидимых) из текущей директории [local] на удаленный компьютер [remote]
# Под невидимыми понимаются все файлы начинающиеся с точки (параметер rsunc --exclude=.*), причем невидимые файлы в поддиректориях не копируются 
# При клонировании происходит полная синхронизация данных - это значит, что все файлы (и структура директорий) не совпадающие с локальной версией будут удалены на remote
# Если же файлы (и структура директорий) совпадают, то они копироваться не будут. При изменении файла передается только "дельта" разности
# К сожалению если файл перенесен из одной директории в другую (или переименовать), то он считается удаленным и созданым заново, т.е. он не переносится на remote из старого места в новое, а копируется из local
# TODO Информация о том, куда копироварь (remote) считывается из из локального файла .clone, где каждая строчка задает новый remote (возможность синхронизации сразу с несколькими серверами)
# Если файла .clone нет, то ищется глобальная переменная $CLONE (сожержащая имя сервера по умолчанию), если и она не найдена, то распечатывается заголовок вызванной команды (clone). 
# Для remote доступа используестя имя текущего пользователя $USER и текущаяя директория (значение команды pwd) 
# Директория куда будут файлы копироваться должна существовать на remote 
# Отчет о проделанной работе выводится на консоль
# 
# usage: clone 

echo
command=`basename $0` 
echo "start: $command"
date=`/bin/date +%d-%m-%Y`
echo "date: $date"
time=`/bin/date +%H:%M:%S`
echo "time: $time"
point=$USER
echo "point: $point"
host=`hostname`
echo "host: $host"
path=`pwd`
echo "path: $path"
local="$point@$host:$path"
echo "local: $local"

if [ -f '.clone' ]; then
	cat .clone | while read remote
	do
		push $remote
	done
else
	echo "message: file .clone doesn't exist"  
	if [ -z $CLONE ]; then                                                                                                                    
		cat $0 | grep '^\# ' | sed -e 's/^\# //' 
		exit                                                                                                       
	fi 
	remote="$point@$CLONE:$path"
	push $remote
fi                                                                                                                                      
date=`/bin/date +%d-%m-%Y`
echo "date: $date"
time=`/bin/date +%H:%M:%S`
echo "time: $time"
echo "stop: $command"
echo
